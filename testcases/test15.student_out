adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 1
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
	INIT PROCESS MAIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
phase2_start_service_processes() called -- currently a NOP
phase3_start_service_processes() called -- currently a NOP
phase4_start_service_processes() called -- currently a NOP
phase5_start_service_processes() called -- currently a NOP
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
	CREATING PROCESS testcase_main
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
   2     1  testcase_main     3         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	TESTCASE MAIN WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
testcase_main(): started
EXPECTATION: Same general test as test13/test14, except that now XXp1() zaps its own child, AND XXp2() will zap the same.  The sequence is thus (1) testcase_main creates XXp1 (2) XXp1 creates XXp3 (3) XXp1 blocks zapping XXp3 (4) testcase_main creates XXp2 (5) XXp2 blocks zapping XXp3 (6) testcase_main and XXp3 race (7) XXp3 calls dumpProcesses and then dies (8) XXp1 and XXp2 unblock (9) XXp1 join()s and then terminates (10) XXp2 terminates (11) testcase_main cleans up
testcase_main(): first fork -- XXp1 will run next.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 3
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
XXp1(): started
XXp1(): arg = 'XXp1'
XXp1(): executing fork of first child
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
	CREATING PROCESS XXp3
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
   4     3  XXp3              3         Runnable
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
FINISHED DISPATCHER
XXp1(): spork of first child returned pid = 4
XXp1(): zap'ing process with pid_z=4
	ZAP
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
   4     3  XXp3              3         Runnable
	ZAPPING PID: 4
	BLOCK ME
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
   4     3  XXp3              3         Runnable
	BLOCKING XXp1
popping from run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of first child 3 -- you should not see this until XXp1() blocks in zap()
testcase_main(): second fork -- XXp2 will run next.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
	CREATING PROCESS XXp2
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 5
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Running
XXp2(): started
XXp2(): zap'ing process with pid_z=4 -- at this point, testcase_main() and XXp3() will race.
	ZAP
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Running
	ZAPPING PID: 4
	BLOCK ME
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Running
	BLOCKING XXp2
popping from run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Blocked(waiting for zap target to quit)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of second child 5
testcase_main(): performing join
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Blocked(waiting for zap target to quit)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
	BLOCK ME
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Blocked(waiting for zap target to quit)
	BLOCKING testcase_main
popping from run queue
popped from run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Blocked(waiting for child to quit)
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Blocked(waiting for zap target to quit)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 4
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Blocked(waiting for child to quit)
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Running
   5     2  XXp2              2         Blocked(waiting for zap target to quit)
XXp3(): started
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Blocked(waiting for child to quit)
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Running
   5     2  XXp2              2         Blocked(waiting for zap target to quit)
XXp3(): terminating -- when this happens, XXp1() and XXp2() will both become runnable, because both are blocked in zap().  XXp1() will run first, because it is higher priority.
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Blocked(waiting for child to quit)
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Running
   5     2  XXp2              2         Blocked(waiting for zap target to quit)
	QUITTING XXp3
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	UNBLOCKPROC
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Blocked(waiting for child to quit)
   3     2  XXp1              1         Blocked(waiting for zap target to quit)
   4     3  XXp3              3         Terminated(5)
   5     2  XXp2              2         Blocked(waiting for zap target to quit)
	Unblocking PID 5
adding to run queue
added to run queue
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Blocked(waiting for child to quit)
   3     2  XXp1              1         Runnable
   4     3  XXp3              3         Terminated(5)
   5     2  XXp2              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 3
FINISHED DISPATCHER
XXp1(): after zap'ing process with pid_z=4
XXp1(): joining with child -- this will NOT block, because the child has already ended.
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Blocked(waiting for child to quit)
   3     2  XXp1              1         Running
   4     3  XXp3              3         Terminated(5)
   5     2  XXp2              2         Runnable
	JOINING CHLDREN OF XXp1
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
XXp1(): join returned kidpid = 4, status = 5
XXp1(): terminating -- when this happens, XXp2() will run, because it is higher priority than testcase_main().
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Blocked(waiting for child to quit)
   3     2  XXp1              1         Running
   5     2  XXp2              2         Runnable
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Terminated(3)
   5     2  XXp2              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 5
FINISHED DISPATCHER
XXp2(): after zap'ing process with pid_z=4
XXp2(): terminating -- testcase_main() now have time to run.
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Terminated(3)
   5     2  XXp2              2         Running
	QUITTING XXp2
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Terminated(3)
   5     2  XXp2              2         Terminated(5)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): exit status for child 5 is 5
testcase_main(): performing join
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Terminated(3)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): exit status for child 3 is 3
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	QUITTING testcase_main
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
finish(): The simulation is now terminating.
