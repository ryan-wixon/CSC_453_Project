adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 1
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
	INIT PROCESS MAIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
phase2_start_service_processes() called -- currently a NOP
phase3_start_service_processes() called -- currently a NOP
phase4_start_service_processes() called -- currently a NOP
phase5_start_service_processes() called -- currently a NOP
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
	CREATING PROCESS testcase_main
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
   2     1  testcase_main     3         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	TESTCASE MAIN WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
testcase_main(): started
EXPECTATION: testcase_main() creates child XXp1(), priority 1.  It creates its own child, XXp3(), priority 3.  It stores the pid of the XXp3() child into a global, and then blocks on join().  testcase_main() wakes up and creates another child, XXp2(), priority 2.  This calls zap() on the pid stored in the global variable, meaning that *two* processes are now blocked on the same XXp3().  XXp3() and testcase_main() race; XXp3() will call dumpProcesses() and die, while testcase_main() will join().  When XXp3() dies, XXp1() and XXp2() will both be awoken but XXp1() will run first.
testcase_main(): fork first child -- this will block, because the child has a higher priority
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 3
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
XXp1(): started
XXp1(): arg = 'XXp1'
XXp1(): executing fork of child
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
	CREATING PROCESS XXp3
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
   4     3  XXp3              3         Runnable
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
FINISHED DISPATCHER
XXp1(): spork of child returned pid = 4
XXp1(): joining with child -- when we block here, testcase_main() should wake up so that it can create its second child.
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
   4     3  XXp3              3         Runnable
	JOINING XXp1
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
	BLOCK ME
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Running
   4     3  XXp3              3         Runnable
	BLOCKING XXp1
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Blocked(waiting for child to quit)
   4     3  XXp3              3         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 3 -- you should not see this until XXp1() is blocked in join().
testcase_main(): fork second child -- this will block, because the child has a higher priority
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Blocked(waiting for child to quit)
   4     3  XXp3              3         Runnable
	CREATING PROCESS XXp2
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              1         Blocked(waiting for child to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 5
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              1         Blocked(waiting for child to quit)
   4     3  XXp3              3         Runnable
   5     2  XXp2              2         Running
XXp2(): started
