adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 1
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
	INIT PROCESS MAIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
phase2_start_service_processes() called -- currently a NOP
phase3_start_service_processes() called -- currently a NOP
phase4_start_service_processes() called -- currently a NOP
phase5_start_service_processes() called -- currently a NOP
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
	CREATING PROCESS testcase_main
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Running
   2     1  testcase_main     3         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	TESTCASE MAIN WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
testcase_main(): started
EXPECTATION: Similar to test03 (create a few processes, join with them, do it again) - but this one will run many iterations of the loop.  Also, each child will have a tight spin loop.  And finally, dumpProcesses() will be called from a child instead of testcase_main().
testcase_main(): calling fork(), arg_buf = 'XXp1_0' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 3
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Running
XXp1(): XXp1_0, started, pid = 3
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 3
FINISHED DISPATCHER
XXp1(): exiting, pid = 3
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 3 -- you should not see this until the child has ended.
testcase_main(): calling fork(), arg_buf = 'XXp1_1' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 4
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Running
XXp1(): XXp1_1, started, pid = 4
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 4
FINISHED DISPATCHER
XXp1(): exiting, pid = 4
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 4
FINISHED DISPATCHER
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 4 -- you should not see this until the child has ended.
testcase_main(): calling fork(), arg_buf = 'XXp1_2' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 5
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Running
XXp1(): XXp1_2, started, pid = 5
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 5
FINISHED DISPATCHER
XXp1(): exiting, pid = 5
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 5 -- you should not see this until the child has ended.
testcase_main(): calling fork(), arg_buf = 'XXp1_3' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 6
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Running
XXp1(): XXp1_3, started, pid = 6
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 6
FINISHED DISPATCHER

Calling dumpProcesses(), from inside one of the XXp1() children.  At this point, there should be 3 terminated (but not joined) children, plus me (the running child).  testcase_main() should be runnable, but obviously not running right now.
****************
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Running
******** end dumpProcessess() ********

XXp1(): exiting, pid = 6
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 6 -- you should not see this until the child has ended.
testcase_main(): calling fork(), arg_buf = 'XXp1_4' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
   7     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 7
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
   7     2  XXp1              2         Running
XXp1(): XXp1_4, started, pid = 7
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
   7     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 7
FINISHED DISPATCHER
XXp1(): exiting, pid = 7
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
   7     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
   7     2  XXp1              2         Terminated(7)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 7 -- you should not see this until the child has ended.

In the output above, you should have seen 5 children be created, with dumpProcesses() called while the 4th was running.  They should all be done now.  I will now call join() on all 5.

	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
   7     2  XXp1              2         Terminated(7)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 7, status = 7
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
   6     2  XXp1              2         Terminated(6)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 6, status = 6
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
   5     2  XXp1              2         Terminated(5)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 5, status = 5
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
   4     2  XXp1              2         Terminated(4)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 4, status = 4
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   3     2  XXp1              2         Terminated(3)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 3, status = 3
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
testcase_main(): calling fork(), arg_buf = 'XXp1_0' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 8
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Running
XXp1(): XXp1_0, started, pid = 8
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 8
FINISHED DISPATCHER
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 8
FINISHED DISPATCHER
XXp1(): exiting, pid = 8
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 8 -- you should not see this until the child has ended.
testcase_main(): calling fork(), arg_buf = 'XXp1_1' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 9
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Running
XXp1(): XXp1_1, started, pid = 9
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 9
FINISHED DISPATCHER
XXp1(): exiting, pid = 9
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 9 -- you should not see this until the child has ended.
testcase_main(): calling fork(), arg_buf = 'XXp1_2' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 10
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Running
XXp1(): XXp1_2, started, pid = 10
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 10
FINISHED DISPATCHER
XXp1(): exiting, pid = 10
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 10 -- you should not see this until the child has ended.
testcase_main(): calling fork(), arg_buf = 'XXp1_3' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 11
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Running
XXp1(): XXp1_3, started, pid = 11
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 11
FINISHED DISPATCHER

Calling dumpProcesses(), from inside one of the XXp1() children.  At this point, there should be 3 terminated (but not joined) children, plus me (the running child).  testcase_main() should be runnable, but obviously not running right now.
****************
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Running
******** end dumpProcessess() ********

XXp1(): exiting, pid = 11
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 11 -- you should not see this until the child has ended.
testcase_main(): calling fork(), arg_buf = 'XXp1_4' -- testcase_main() will block until this child terminates, because the child is higher priority.
	SPORK
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
	CREATING PROCESS XXp1
adding to run queue
added to run queue
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Runnable
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 12
	PROCESS WRAPPER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Running
XXp1(): XXp1_4, started, pid = 12
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 12
FINISHED DISPATCHER
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 12
FINISHED DISPATCHER
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 12
FINISHED DISPATCHER
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Running
DISPATCHER CHECKPOINT 1
DISPATCHER CHECKPOINT 2
sending to back of run queue
popping from run queue
adding to run queue
added to run queue
popped from run queue
SWITCHING TO PID 12
FINISHED DISPATCHER
XXp1(): exiting, pid = 12
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Running
	QUITTING XXp1
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
	DISPATCHER
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Runnable
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Terminated(12)
DISPATCHER CHECKPOINT 1
SWITCHING TO PID 2
FINISHED DISPATCHER
testcase_main(): after fork of child 12 -- you should not see this until the child has ended.

In the output above, you should have seen 5 children be created, with dumpProcesses() called while the 4th was running.  They should all be done now.  I will now call join() on all 5.

	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
  12     2  XXp1              2         Terminated(12)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 12, status = 12
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
  11     2  XXp1              2         Terminated(11)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 11, status = 11
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
  10     2  XXp1              2         Terminated(10)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 10, status = 10
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
   9     2  XXp1              2         Terminated(9)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 9, status = 9
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
   8     2  XXp1              2         Terminated(8)
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
JOIN CHECKPOINT 2
testcase_main(): after join of child 8, status = 8
	JOIN
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	JOINING CHLDREN OF testcase_main
JOIN CHECKPOINT 1
	QUIT
 PID  PPID  NAME              PRIORITY  STATE
   1     0  init              6         Runnable
   2     1  testcase_main     3         Running
	QUITTING testcase_main
QUIT CHECKPOINT 1
popping from run queue
QUIT CHECKPOINT 2
finish(): The simulation is now terminating.
